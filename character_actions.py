from utils import calculate_actual_stats, get_stat_display_name, get_learned_technique_display_name, get_all_learned_technique_keys

def format_character_full_info(char_data_row):
    if not char_data_row:
        return "–ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω."
    char_data = dict(char_data_row) 

    actual_stats = calculate_actual_stats(char_data) 
    info = []
    info.append(f"üë§ –ü–æ–ª–Ω–æ–µ –ò–º—è: {char_data['full_name']}")
    info.append(f"üéÇ –í–æ–∑—Ä–∞—Å—Ç: {char_data.get('age', '–ù–µ —É–∫–∞–∑–∞–Ω')}")
    info.append(f"üöª –ü–æ–ª: {char_data.get('gender', '–ù–µ —É–∫–∞–∑–∞–Ω')}")
    info.append(f"üö© –ü—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç—å/–§—Ä–∞–∫—Ü–∏—è: {char_data.get('faction', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}")
    info.append("\nüìú –í–Ω–µ—à–Ω–æ—Å—Ç—å:")
    info.append(f"{char_data.get('appearance', '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.')}")

    info.append("\nüìä –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ü–µ—Ä—Å–æ–Ω–∞–∂–∞:")
    info.append("  –†–∞–∑–≤–∏—Ç–∏–µ –ü—Ä–æ–∫–ª—è—Ç–æ–π –≠–Ω–µ—Ä–≥–∏–∏:")
    info.append(f"    –£—Ä–æ–≤–µ–Ω—å –ó–∞–ø–∞—Å–∞ –ü–≠: [{char_data['level_cursed_energy_reserve']}] (–ú–∞–∫—Å. CP: {actual_stats['max_cp']})")
    info.append(f"    –£—Ä–æ–≤–µ–Ω—å –í—ã–±—Ä–æ—Å–∞ –ü–≠: [{char_data['level_cursed_energy_output']}] (–õ–∏–º–∏—Ç CP –∑–∞ –¥–µ–π—Å—Ç–≤–∏–µ: {actual_stats['max_cp_output']})")
    info.append(f"    –£—Ä–æ–≤–µ–Ω—å –ö–æ–Ω—Ç—Ä–æ–ª—è –ü–≠: [{char_data['level_cursed_energy_control']}] (–û–±–ª–∞—Å—Ç—å —É—Å–∏–ª–µ–Ω–∏—è: {actual_stats['cursed_energy_control_area']})")

    info.append("  –§–∏–∑–∏—á–µ—Å–∫–æ–µ –†–∞–∑–≤–∏—Ç–∏–µ:")
    info.append(f"    –£—Ä–æ–≤–µ–Ω—å –ë–∞–∑–æ–≤–æ–π –°–∏–ª—ã: [{char_data['level_base_strength']}] (S: {actual_stats['base_strength_value']})")
    info.append(f"    –£—Ä–æ–≤–µ–Ω—å –ë–∞–∑–æ–≤–æ–π –ü—Ä–æ—á–Ω–æ—Å—Ç–∏: [{char_data['level_base_durability']}] (S: {actual_stats['base_durability_value']})")
    info.append(f"    –£—Ä–æ–≤–µ–Ω—å –ë–∞–∑–æ–≤–æ–π –°–∫–æ—Ä–æ—Å—Ç–∏: [{char_data['level_base_speed']}] (V: {actual_stats['base_speed_value']} –º/—Å)")
    info.append(f"    –£—Ä–æ–≤–µ–Ω—å –°—Ç–æ–π–∫–æ—Å—Ç–∏: [{char_data['level_stamina']}] (–°–Ω–∏–∂–µ–Ω–∏–µ —à—Ç—Ä–∞—Ñ–∞: {actual_stats['stamina_penalty_reduction']*100}%)")

    info.append("  –ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ –ü—Ä–æ–∫–ª—è—Ç–æ–π –¢–µ—Ö–Ω–∏–∫–∏:")
    info.append(f"    –£—Ä–æ–≤–µ–Ω—å –ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞ –¢–µ—Ö–Ω–∏–∫–∏: [{char_data['level_cursed_technique_mastery']}]")
    info.append(f"    –£—Ä–æ–≤–µ–Ω—å –°–ø–ª–µ—Ç–µ–Ω–∏—è –ê–±—Å–æ–ª—é—Ç–Ω–æ–π –ü—É—Å—Ç–æ—Ç—ã: [{char_data['level_absolute_void_weaving']}] (–°–∏–ª–∞: {actual_stats['absolute_void_weaving_power']} CP)")
    info.append(f"    –£—Ä–æ–≤–µ–Ω—å –¶–≤–µ—Ç–∫–∞ –ü–∞–¥–∞—é—â–∏—Ö –≠–º–æ—Ü–∏–π: [{char_data['level_falling_emotions_flower']}] (–°–∏–ª–∞: {actual_stats['falling_emotions_flower_power']} CP)")


    info.append("  –†–∞–∑–≤–∏—Ç–∏–µ –ë–∞—Ä—å–µ—Ä–Ω—ã—Ö –¢–µ—Ö–Ω–∏–∫ –∏ –†–¢:")
    info.append(f"    –£—Ä–æ–≤–µ–Ω—å –£—Ç–æ–Ω—á—ë–Ω–Ω–æ—Å—Ç–∏ –¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏: [{char_data['level_territory_refinement']}] (–°–∏–ª–∞ –†–¢: {actual_stats['territory_refinement_power']} CP)")
    info.append(f"    –£—Ä–æ–≤–µ–Ω—å –ü—Ä–æ—á–Ω–æ—Å—Ç–∏ –ë–∞—Ä—å–µ—Ä–∞ –†–¢: [{char_data['level_territory_barrier_strength']}] (–í–Ω–µ—à–Ω: {actual_stats['territory_barrier_strength_outside']} S / –í–Ω—É—Ç—Ä: {actual_stats['territory_barrier_strength_inside']} S)")

    info.append("  –†–∞–∑–≤–∏—Ç–∏–µ –û–±—Ä–∞—Ç–Ω–æ–π –ü—Ä–æ–∫–ª—è—Ç–æ–π –¢–µ—Ö–Ω–∏–∫–∏ (–û–ü–¢):")
    info.append(f"    –£—Ä–æ–≤–µ–Ω—å –í—ã–±—Ä–æ—Å–∞ –û–ü–¢: [{char_data['level_reverse_cursed_technique_output']}] (–õ–∏–º–∏—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ P+: {actual_stats['reverse_cursed_technique_output_value']})")
    info.append(f"    –£—Ä–æ–≤–µ–Ω—å –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –û–ü–¢: [{char_data['level_reverse_cursed_technique_efficiency']}]")

    info.append("  –†–∞–∑–≤–∏—Ç–∏–µ –ë–æ–µ–≤–æ–≥–æ –ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞:")
    info.append(f"    –£—Ä–æ–≤–µ–Ω—å –ß—ë—Ä–Ω–æ–π –í—Å–ø—ã—à–∫–∏ (–®–∞–Ω—Å): [{char_data['level_black_flash_chance']}] (–ù—É–∂–µ–Ω –±—Ä–æ—Å–æ–∫ ‚â§ {actual_stats['black_flash_chance_roll_needed']} –Ω–∞ d20)")
    info.append(f"    –£—Ä–æ–≤–µ–Ω—å –ß—ë—Ä–Ω–æ–π –í—Å–ø—ã—à–∫–∏ (–õ–∏–º–∏—Ç): [{char_data['level_black_flash_limit']}] (–õ–∏–º–∏—Ç –∑–∞ –±–æ–π: {actual_stats['black_flash_limit_value']})")

    info.append("\nüåÄ –ü—Ä–æ–∫–ª—è—Ç–∞—è –¢–µ—Ö–Ω–∏–∫–∞:")
    info.append(f"{char_data.get('cursed_technique_description', '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.')}")

    info.append("\nüéí –°–Ω–∞—Ä—è–∂–µ–Ω–∏–µ:")
    info.append(f"{char_data.get('equipment', '–°–Ω–∞—Ä—è–∂–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.')}")

    info.append("\nüí° –ò–∑—É—á–µ–Ω–Ω—ã–µ –û–±—â–∏–µ –¢–µ—Ö–Ω–∏–∫–∏:")
    learned_any = False
    for tech_key in get_all_learned_technique_keys():
        if char_data.get(tech_key, False): 
            info.append(f"  - {get_learned_technique_display_name(tech_key)}")
            learned_any = True
    if not learned_any:
        info.append("  –ù–µ—Ç –∏–∑—É—á–µ–Ω–Ω—ã—Ö –æ–±—â–∏—Ö —Ç–µ—Ö–Ω–∏–∫.")

    info.append(f"\n‚ú® –û—á–∫–∏ –†–∞–∑–≤–∏—Ç–∏—è (–û–†): {char_data.get('rp_points', 0)}")

    return "\n".join(info)

def format_character_basic_info(char_data_row):
    if not char_data_row:
        return "–ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω."
    char_data = dict(char_data_row) 
    info = [
        f"üë§ –ü–æ–ª–Ω–æ–µ –ò–º—è: {char_data['full_name']}",
        f"üéÇ –í–æ–∑—Ä–∞—Å—Ç: {char_data.get('age', '–ù–µ —É–∫–∞–∑–∞–Ω')}",
        f"üöª –ü–æ–ª: {char_data.get('gender', '–ù–µ —É–∫–∞–∑–∞–Ω')}",
        f"üö© –ü—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç—å/–§—Ä–∞–∫—Ü–∏—è: {char_data.get('faction', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}",
        "\nüìú –í–Ω–µ—à–Ω–æ—Å—Ç—å:",
        f"{char_data.get('appearance', '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.')}"
    ]
    return "\n".join(info)

def format_character_stats_info(char_data_row):
    if not char_data_row:
        return "–ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω."
    char_data = dict(char_data_row)

    actual_stats = calculate_actual_stats(char_data) 
    info = ["üìä –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ü–µ—Ä—Å–æ–Ω–∞–∂–∞:"]
    info.append("  –†–∞–∑–≤–∏—Ç–∏–µ –ü—Ä–æ–∫–ª—è—Ç–æ–π –≠–Ω–µ—Ä–≥–∏–∏:")
    info.append(f"    –£—Ä–æ–≤–µ–Ω—å –ó–∞–ø–∞—Å–∞ –ü–≠: [{char_data['level_cursed_energy_reserve']}] (–ú–∞–∫—Å. CP: {actual_stats['max_cp']})")
    info.append(f"    –£—Ä–æ–≤–µ–Ω—å –í—ã–±—Ä–æ—Å–∞ –ü–≠: [{char_data['level_cursed_energy_output']}] (–õ–∏–º–∏—Ç CP –∑–∞ –¥–µ–π—Å—Ç–≤–∏–µ: {actual_stats['max_cp_output']})")
    info.append(f"    –£—Ä–æ–≤–µ–Ω—å –ö–æ–Ω—Ç—Ä–æ–ª—è –ü–≠: [{char_data['level_cursed_energy_control']}] (–û–±–ª–∞—Å—Ç—å —É—Å–∏–ª–µ–Ω–∏—è: {actual_stats['cursed_energy_control_area']})")

    info.append("  –§–∏–∑–∏—á–µ—Å–∫–æ–µ –†–∞–∑–≤–∏—Ç–∏–µ:")
    info.append(f"    –£—Ä–æ–≤–µ–Ω—å –ë–∞–∑–æ–≤–æ–π –°–∏–ª—ã: [{char_data['level_base_strength']}] (S: {actual_stats['base_strength_value']})")
    info.append(f"    –£—Ä–æ–≤–µ–Ω—å –ë–∞–∑–æ–≤–æ–π –ü—Ä–æ—á–Ω–æ—Å—Ç–∏: [{char_data['level_base_durability']}] (S: {actual_stats['base_durability_value']})")
    info.append(f"    –£—Ä–æ–≤–µ–Ω—å –ë–∞–∑–æ–≤–æ–π –°–∫–æ—Ä–æ—Å—Ç–∏: [{char_data['level_base_speed']}] (V: {actual_stats['base_speed_value']} –º/—Å)")
    info.append(f"    –£—Ä–æ–≤–µ–Ω—å –°—Ç–æ–π–∫–æ—Å—Ç–∏: [{char_data['level_stamina']}] (–°–Ω–∏–∂–µ–Ω–∏–µ —à—Ç—Ä–∞—Ñ–∞: {actual_stats['stamina_penalty_reduction']*100}%)")

    info.append("  –ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ –ü—Ä–æ–∫–ª—è—Ç–æ–π –¢–µ—Ö–Ω–∏–∫–∏:")
    info.append(f"    –£—Ä–æ–≤–µ–Ω—å –ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞ –¢–µ—Ö–Ω–∏–∫–∏: [{char_data['level_cursed_technique_mastery']}]")
    info.append(f"    –£—Ä–æ–≤–µ–Ω—å –°–ø–ª–µ—Ç–µ–Ω–∏—è –ê–±—Å–æ–ª—é—Ç–Ω–æ–π –ü—É—Å—Ç–æ—Ç—ã: [{char_data['level_absolute_void_weaving']}] (–°–∏–ª–∞: {actual_stats['absolute_void_weaving_power']} CP)")
    info.append(f"    –£—Ä–æ–≤–µ–Ω—å –¶–≤–µ—Ç–∫–∞ –ü–∞–¥–∞—é—â–∏—Ö –≠–º–æ—Ü–∏–π: [{char_data['level_falling_emotions_flower']}] (–°–∏–ª–∞: {actual_stats['falling_emotions_flower_power']} CP)")


    info.append("  –†–∞–∑–≤–∏—Ç–∏–µ –ë–∞—Ä—å–µ—Ä–Ω—ã—Ö –¢–µ—Ö–Ω–∏–∫ –∏ –†–¢:")
    info.append(f"    –£—Ä–æ–≤–µ–Ω—å –£—Ç–æ–Ω—á—ë–Ω–Ω–æ—Å—Ç–∏ –¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏: [{char_data['level_territory_refinement']}] (–°–∏–ª–∞ –†–¢: {actual_stats['territory_refinement_power']} CP)")
    info.append(f"    –£—Ä–æ–≤–µ–Ω—å –ü—Ä–æ—á–Ω–æ—Å—Ç–∏ –ë–∞—Ä—å–µ—Ä–∞ –†–¢: [{char_data['level_territory_barrier_strength']}] (–í–Ω–µ—à–Ω: {actual_stats['territory_barrier_strength_outside']} S / –í–Ω—É—Ç—Ä: {actual_stats['territory_barrier_strength_inside']} S)")

    info.append("  –†–∞–∑–≤–∏—Ç–∏–µ –û–±—Ä–∞—Ç–Ω–æ–π –ü—Ä–æ–∫–ª—è—Ç–æ–π –¢–µ—Ö–Ω–∏–∫–∏ (–û–ü–¢):")
    info.append(f"    –£—Ä–æ–≤–µ–Ω—å –í—ã–±—Ä–æ—Å–∞ –û–ü–¢: [{char_data['level_reverse_cursed_technique_output']}] (–õ–∏–º–∏—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ P+: {actual_stats['reverse_cursed_technique_output_value']})")
    info.append(f"    –£—Ä–æ–≤–µ–Ω—å –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –û–ü–¢: [{char_data['level_reverse_cursed_technique_efficiency']}]")

    info.append("  –†–∞–∑–≤–∏—Ç–∏–µ –ë–æ–µ–≤–æ–≥–æ –ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞:")
    info.append(f"    –£—Ä–æ–≤–µ–Ω—å –ß—ë—Ä–Ω–æ–π –í—Å–ø—ã—à–∫–∏ (–®–∞–Ω—Å): [{char_data['level_black_flash_chance']}] (–ù—É–∂–µ–Ω –±—Ä–æ—Å–æ–∫ ‚â§ {actual_stats['black_flash_chance_roll_needed']} –Ω–∞ d20)")
    info.append(f"    –£—Ä–æ–≤–µ–Ω—å –ß—ë—Ä–Ω–æ–π –í—Å–ø—ã—à–∫–∏ (–õ–∏–º–∏—Ç): [{char_data['level_black_flash_limit']}] (–õ–∏–º–∏—Ç –∑–∞ –±–æ–π: {actual_stats['black_flash_limit_value']})")

    return "\n".join(info)

def format_cursed_technique_info(char_data_row):
    if not char_data_row:
        return "–ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω."
    char_data = dict(char_data_row) 
    return f"üåÄ –ü—Ä–æ–∫–ª—è—Ç–∞—è –¢–µ—Ö–Ω–∏–∫–∞:\n{char_data.get('cursed_technique_description', '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.')}"

def format_equipment_info(char_data_row):
    if not char_data_row:
        return "–ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω."
    char_data = dict(char_data_row) 
    return f"üéí –°–Ω–∞—Ä—è–∂–µ–Ω–∏–µ:\n{char_data.get('equipment', '–°–Ω–∞—Ä—è–∂–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.')}"

def format_learned_techniques_info(char_data_row):
    if not char_data_row:
        return "–ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω."
    char_data = dict(char_data_row) 

    info = ["üí° –ò–∑—É—á–µ–Ω–Ω—ã–µ –û–±—â–∏–µ –¢–µ—Ö–Ω–∏–∫–∏:"]
    learned_any = False
    for tech_key in get_all_learned_technique_keys():
        if char_data.get(tech_key, False): 
            info.append(f"  - {get_learned_technique_display_name(tech_key)}")
            learned_any = True
    if not learned_any:
        info.append("  –ù–µ—Ç –∏–∑—É—á–µ–Ω–Ω—ã—Ö –æ–±—â–∏—Ö —Ç–µ—Ö–Ω–∏–∫.")
    return "\n".join(info)

def get_default_stats_for_creation():
    return {
        "level_cursed_energy_reserve": 2,
        "level_cursed_energy_output": 2,
        "level_cursed_energy_control": 1,
        "level_base_strength": 1,
        "level_base_durability": 1,
        "level_base_speed": 10,
        "level_stamina": 0,
        "level_cursed_technique_mastery": 0,
        "level_territory_refinement": 0,
        "level_territory_barrier_strength": 0,
        "level_reverse_cursed_technique_output": 0,
        "level_reverse_cursed_technique_efficiency": 0,
        "level_black_flash_chance": 0,
        "level_black_flash_limit": 0,
        "level_absolute_void_weaving": 0,
        "level_falling_emotions_flower": 0,
    }